// *** WARNING: DO NOT MODIFY *** This is a generated JavaScript source code!
//
// Generated by LF-ET 2.3.0 (240312a), https://www.lohrfink.de/lfet
// From decision table
// "../htmlSanityCheck.js/lfet/checker/BrokenHttpLinksChecker.lfet"
// 13.03.2024 01:02
//

// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.ini not found
// used LF-ET 2.3.0 (240312a) build in default

class IBrokenHttpLinksChecker
{
// Prolog Standard <----

    /**
     * <b>B02: ignore localhost check</b><br>
     * <br>
     * <b>B02/01: Y - Yes</b>
     */
    isIgnoreLocalhostCheck(model) {
    }

    /**
     * <b>B03: check if localhost</b><br>
     * <br>
     * The enum generation has been triggered in project.ini by:<br>
     * - <b>IDE.JavaScript.InterfaceEnum.10</b>: IncludeTagsTitle=check if localhost; Symbol; Title<br>
     * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
     */
    isCheckIfLocalhost(/* CheckIfLocalhost */ arg, model) {
    }

    /**
     * <b>B04: ignore ip address check</b><br>
     * <br>
     * <b>B04/01: Y - Yes</b>
     */
    isIgnoreIpAddressCheck(model) {
    }

    /**
     * <b>B05: check if ip address</b><br>
     * <br>
     * <b>B05/01: Y - Yes</b>
     */
    isCheckIfIpAddress(model) {
    }

    /**
     * <b>B06: check http status code in configured success range</b><br>
     * <br>
     * <b>B06/01: SUCCESS - configured success status code range</b>
     */
    isCheckHttpStatusCodeInConfiguredSuccessRange_SUCCESS(model) {
    }

    /**
     * <b>B07: check http status code in configured warning range</b><br>
     * <br>
     * <b>B07/01: WARN - configured warn status code range</b>
     */
    isCheckHttpStatusCodeInConfiguredWarningRange_WARN(model) {
    }

    /**
     * <b>B08: check http status code in configured error range</b><br>
     * <br>
     * <b>B08/01: ERROR - configured error status code range</b>
     */
    isCheckHttpStatusCodeInConfiguredErrorRange_ERROR(model) {
    }

    /**
     * <b>B09: check http status code in redirect range</b><br>
     * <br>
     * <b>B09/01: 30x - [301:308]</b>
     */
    isCheckHttpStatusCodeInRedirectRange_30X(model) {
    }

    /**
     * <b>B10: check if header contains location</b><br>
     * <br>
     * <b>B10/01: Y - Yes</b>
     */
    isCheckIfHeaderContainsLocation(model) {
    }

    /**
     * <b>A01: create finding</b><br>
     * <br>
     * <b>A01/01: REDIRECT - create a finding with information about redirect location</b>
     */
    doCreateFinding_REDIRECT(model) {
    }

    /**
     * <b>A01: create finding</b><br>
     * <br>
     * <b>A01/02: NUMERIC_IP - </b>
     */
    doCreateFinding_NUMERIC_IP(model) {
    }

    /**
     * <b>A01: create finding</b><br>
     * <br>
     * <b>A01/03: LOCALHOST - </b>
     */
    doCreateFinding_LOCALHOST(model) {
    }

    /**
     * <b>A02: execute http request</b><br>
     * <br>
     * The enum generation has been triggered in project.ini by:<br>
     * - <b>IDE.JavaScript.InterfaceEnum.20</b>: IncludeTagsTitle=execute http request; Symbol<br>
     * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
     */
    doExecuteHttpRequest(/* ExecuteHttpRequest */ arg, model) {
    }
}

/**
 * <b>B03: check if localhost</b><br>
 * <br>
 * The enum generation has been triggered in project.ini by:<br>
 * - <b>IDE.JavaScript.InterfaceEnum.10</b>: IncludeTagsTitle=check if localhost; Symbol; Title<br>
 * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
 */
class CheckIfLocalhost
{
    #symbol;
    #title;

    constructor(symbol, title)
    {
        this.#symbol = symbol;
        this.#title = title;
    }

    getSymbol()
    {
        return this.#symbol;
    }

    getTitle()
    {
        return this.#title;
    }
}

/**
 * <b>A02: execute http request</b><br>
 * <br>
 * The enum generation has been triggered in project.ini by:<br>
 * - <b>IDE.JavaScript.InterfaceEnum.20</b>: IncludeTagsTitle=execute http request; Symbol<br>
 * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
 */
class ExecuteHttpRequest
{
    #symbol;

    constructor(symbol)
    {
        this.#symbol = symbol;
    }

    getSymbol()
    {
        return this.#symbol;
    }
}

// Epilog Standard ---->
// profile LFET.Java.Epilog.Standard.Interface.ini not found
// used LF-ET 2.3.0 (240312a) build in default

module.exports = {

    DecisionTableLogic: IBrokenHttpLinksChecker,

    /**
     * <b>B03: check if localhost</b><br>
     * <br>
     * <b>B03/01: localhost - \/\/localhost</b>
     */
    CheckIfLocalhost_LOCALHOST: new CheckIfLocalhost("localhost", "\\/\\/localhost"),

    /**
     * <b>B03: check if localhost</b><br>
     * <br>
     * <b>B03/02: 127.0.0.x - \/\/127\.0\.0\.[0-9]*</b>
     */
    CheckIfLocalhost_12700X: new CheckIfLocalhost("127.0.0.x", "\\/\\/127\\.0\\.0\\.[0-9]*"),

    /**
     * <b>A02: execute http request</b><br>
     * <br>
     * <b>A02/01: HEAD - head request</b>
     */
    ExecuteHttpRequest_HEAD: new ExecuteHttpRequest("HEAD"),

    /**
     * <b>A02: execute http request</b><br>
     * <br>
     * <b>A02/02: GET - get request</b>
     */
    ExecuteHttpRequest_GET: new ExecuteHttpRequest("GET")
}

// Epilog Standard <----

// End of generated JavaScript source code
// Generated by LF-ET 2.3.0 (240312a), https://www.lohrfink.de/lfet
