// *** WARNING: DO NOT MODIFY *** This is a generated JavaScript source code!
//
// Generated by LF-ET 2.3.0 (240306a), https://www.lohrfink.de/lfet
// From decision table
// "../htmlSanityCheck.js/lfet/checker/BrokenHttpLinksChecker.lfet"
// 06.03.2024 23:48
//

// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.ini not found
// used LF-ET 2.3.0 (240306a) build in default

class IBrokenHttpLinksChecker
{
// Prolog Standard <----

    /**
     * <b>C02: ignore localhost check</b>
     */
    isIgnoreLocalhostCheck(model) {
    }

    /**
     * <b>C03: check if localhost</b><br>
     * <br>
     * The enum generation has been triggered in project.ini by:<br>
     * - <b>IDE.JavaScript.InterfaceEnum.10</b>: IncludeTagsTitle=check if localhost; Symbol; Title<br>
     * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
     */
    isCheckIfLocalhost(/* CheckIfLocalhost */ arg, model) {
    }

    /**
     * <b>C04: ignore ip address check</b>
     */
    isIgnoreIpAddressCheck(model) {
    }

    /**
     * <b>C05: check if ip address</b>
     */
    isCheckIfIpAddress(model) {
    }

    /**
     * <b>C06: check http status code</b><br>
     * <br>
     * The enum generation has been triggered in project.ini by:<br>
     * - <b>IDE.JavaScript.InterfaceEnum.20</b>: IncludeTagsTitle=check http status code; Symbol; Title=Interval<br>
     * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
     */
    isCheckHttpStatusCode(/* CheckHttpStatusCode */ arg, model) {
    }

    /**
     * <b>C07: check if header contains location</b>
     */
    isCheckIfHeaderContainsLocation(model) {
    }

    /**
     * <b>A01: create finding</b>
     */
    doCreateFinding(model) {
    }

    /**
     * <b>A02: execute http request</b><br>
     * <br>
     * The enum generation has been triggered in project.ini by:<br>
     * - <b>IDE.JavaScript.InterfaceEnum.30</b>: IncludeTagsTitle=execute http request; Symbol<br>
     * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
     */
    doExecuteHttpRequest(/* ExecuteHttpRequest */ arg, model) {
    }
}

/**
 * <b>C03: check if localhost</b><br>
 * <br>
 * The enum generation has been triggered in project.ini by:<br>
 * - <b>IDE.JavaScript.InterfaceEnum.10</b>: IncludeTagsTitle=check if localhost; Symbol; Title<br>
 * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
 */
class CheckIfLocalhost
{
    #symbol;
    #title;

    constructor(symbol, title)
    {
        this.#symbol = symbol;
        this.#title = title;
    }

    getSymbol()
    {
        return this.#symbol;
    }

    getTitle()
    {
        return this.#title;
    }
}

/**
 * <b>C06: check http status code</b><br>
 * <br>
 * The enum generation has been triggered in project.ini by:<br>
 * - <b>IDE.JavaScript.InterfaceEnum.20</b>: IncludeTagsTitle=check http status code; Symbol; Title=Interval<br>
 * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
 */
class CheckHttpStatusCode
{
    #symbol;
    #title;
    #titleMin;
    #titleMax;

    constructor(symbol, title, titleMin, titleMax)
    {
        this.#symbol = symbol;
        this.#title = title;
        this.#titleMin = titleMin;
        this.#titleMax = titleMax;
    }

    getSymbol()
    {
        return this.#symbol;
    }

    getTitle()
    {
        return this.#title;
    }

    getTitleMin()
    {
        return this.#titleMin;
    }

    getTitleMax()
    {
        return this.#titleMax;
    }

    isInTitleInterval(arg)
    {
        return arg >= this.#titleMin && arg <= this.#titleMax;
    }
}

/**
 * <b>A02: execute http request</b><br>
 * <br>
 * The enum generation has been triggered in project.ini by:<br>
 * - <b>IDE.JavaScript.InterfaceEnum.30</b>: IncludeTagsTitle=execute http request; Symbol<br>
 * - <b>ide.JavaScript.InterfaceEnum.default</b>: MethodName=Prefix; EnumValueName=Symbol, UpperCase
 */
class ExecuteHttpRequest
{
    #symbol;

    constructor(symbol)
    {
        this.#symbol = symbol;
    }

    getSymbol()
    {
        return this.#symbol;
    }
}

// Epilog Standard ---->
// profile LFET.Java.Epilog.Standard.Interface.ini not found
// used LF-ET 2.3.0 (240306a) build in default

module.exports = {

    DecisionTableLogic: IBrokenHttpLinksChecker,

    /**
     * <b>C03: check if localhost</b><br>
     * <br>
     * <b>C03/01: localhost - localhost</b>
     */
    CheckIfLocalhost_LOCALHOST: new CheckIfLocalhost("localhost", "localhost"),

    /**
     * <b>C03: check if localhost</b><br>
     * <br>
     * <b>C03/02: 127.0.0.x - 127.0.0.</b>
     */
    CheckIfLocalhost_12700X: new CheckIfLocalhost("127.0.0.x", "127.0.0."),

    /**
     * <b>C06: check http status code</b><br>
     * <br>
     * <b>C06/01: 20x - [200:300[</b>
     */
    CheckHttpStatusCode_20X: new CheckHttpStatusCode("20x", "[200:300[", 200.0, 299.0),

    /**
     * <b>C06: check http status code</b><br>
     * <br>
     * <b>C06/02: 30x - [301:308]</b>
     */
    CheckHttpStatusCode_30X: new CheckHttpStatusCode("30x", "[301:308]", 301.0, 308.0),

    /**
     * <b>A02: execute http request</b><br>
     * <br>
     * <b>A02/01: HEAD - head request</b>
     */
    ExecuteHttpRequest_HEAD: new ExecuteHttpRequest("HEAD"),

    /**
     * <b>A02: execute http request</b><br>
     * <br>
     * <b>A02/02: GET - get request</b>
     */
    ExecuteHttpRequest_GET: new ExecuteHttpRequest("GET")
}

// Epilog Standard <----

// End of generated JavaScript source code
// Generated by LF-ET 2.3.0 (240306a), https://www.lohrfink.de/lfet
